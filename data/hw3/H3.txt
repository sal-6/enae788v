For all problems use the obstacle file called
"obstaclesH3.txt"

IMPORTANT NOTE:

points in the configuration space have the form
(x,y,theta,v,w)
position value x is valid on the range -50 to 50
position value y is valid on the range -50 to 50
rotation theta goes from 0 to 2*pi
forward velocity v goes from -5 to 5
steering velocity w goes from -pi/2 to pi/2

C-space Values outside this range are invalid

The system also has the constraints:

forward acceleration a = dv/dt is on the range -2 to 2
steering acceleration gamma = dtheta/dt is on the range -pi/2 to pi/2

The system dynamics model is given in lecture 13

And trajectories need to be collision checked at least every delta distance with respect to obstacles.


For each of the following problems you will turn in:

1) graphical representation of the paths that were calculated 
   moving through the workspace (including drawing obstacles).

2) Text files (.csv, per path) each line is: "t_i, x_i, y_i, theta_i, v_i, w_i, a_i, gamma_i", where t_i, x_i, y_i, theta_i, are values at trajectory i start, and v_i, u_i are the controls applied from time t_i to t_(i+1) to make the robot follow trajectory i

Note that the path consists of the sequence of trajectories i = 0,1, ..., n 

Don't forget: you also need to include this with your code in a zip file.



ALL PROBLEMS START WITH THE ROBOT STOPPED v=0, w=0
ALL PROBLEMS MAY END WITH THE ROBOT TRAVELING AT ANY VALID v,w,theta
ALL PROBLEMS ASSUME delta <= .5

Here are the problems:

----------------------
Problem 1:

start (x,y,theta):  [30, -35, pi/2]
goal region (x,y,radius) = [0, 0, 5]
epsilon = 10

---------------------

Problem 2:

start (x,y,theta):  [40,-40, 0]
goal region (x,y,radius) = [30, 40, 5]
epsilon = 5


----------------------
Problem 3:

start (x,y,theta):  [30, 40, 3*pi/2]
goal region (x,y,radius) = [-50, -30, 5]
epsilon = 5


----------------------
Problem 4:

start (x,y,theta):  [-50, -30, pi/2]
goal region (x,y,radius) = [30, -35, 5]
epsilon = 3

----------------------
Problem 5:

start (x,y,theta):  [-30, -35, -pi/4]
goal region (x,y,radius) = [-35, 30, 5]
epsilon = 2


